<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code | Living and Programming - YJ Park's Blog]]></title>
  <link href="http://blog.yjpark.org/blog/categories/code/atom.xml" rel="self"/>
  <link href="http://blog.yjpark.org/"/>
  <updated>2014-01-21T21:53:44+08:00</updated>
  <id>http://blog.yjpark.org/</id>
  <author>
    <name><![CDATA[YJ Park]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Save Day One Summary to Evernote]]></title>
    <link href="http://blog.yjpark.org/blog/2014/01/21/save-day-one-summary-to-evernote/"/>
    <updated>2014-01-21T18:24:11+08:00</updated>
    <id>http://blog.yjpark.org/blog/2014/01/21/save-day-one-summary-to-evernote</id>
    <content type="html"><![CDATA[<h2>Why Not Just Use Evernote?</h2>

<p>I&rsquo;ve been using Evernote for several years, which is great, the best features to me are:</p>

<ul>
<li>Multi devices synchronization</li>
<li>High quality app on iOS/Android and OSX</li>
<li>Very good search in notes (even in the photos)</li>
</ul>


<p>Though lately I found myself write less an less in Evernote, if I&rsquo;m writing something long, then usually I will use MacVim, may copy the text back to Evernote. If I need to write a couple of line, the process to write in Evernote is like this:</p>

<ul>
<li>Switch to Evernote</li>
<li>Find the note for current day (each day I will have a new note.)</li>
<li>Go to the end of the note</li>
<li>Write something</li>
<li>Switch back</li>
</ul>


<p>Feels a bit heavy, also there is no information about when I did add the line into the note.</p>

<!--more-->


<h2>Day One</h2>

<p>Since 2013 I started to use <a href="http://dayoneapp.com/">Day One</a>, which is a very beautiful application(has OSX and iOS versions) for note taking. Here is the reasons that I like it:</p>

<ul>
<li>Quick note adding widget in menubar, which can be triggered by a global shortcut</li>
<li>Markdown format, rendered very nicely as well.</li>
<li>Dropbox synchronization, iCloud supported as well.</li>
<li>Every note has a timestamp.</li>
<li>Calendar view for all the notes.</li>
<li>Look and feels very nice.</li>
</ul>


<p>Then the process to add a quick note will be:</p>

<ul>
<li>Using the global shortcut.</li>
<li>Type, then Cmd-Enter to save it.</li>
</ul>


<p>It&rsquo;s much more light-weigh comparing to the Evernote way.</p>

<h2>Why Not Just Use Day One?</h2>

<p>One major missed part in <code>Day One</code> is the lack of Android support, also the search is not as good as evernote, another problem is that you can not see all the notes in one day at once, you have to mouse over each item to see the whole content, which is a bit annoying IMO.</p>

<h2>Dayone 2 Evernote</h2>

<p>So I wrote a very simple script to export <code>Day One</code> entries as a summary note in Evernote.</p>

<p>Timestamps will be added in front of each entry.</p>

<p>The summary note will look like:
```
[00:25]
One note written in Day One</p>

<p>[19:17]
Another note in Day One</p>

<p>&hellip;
```
They will not be converted to HTML format, since I prefer to keep the plain text format in Evernote, and MarkDown notes looks very nice as plain text to me.</p>

<p>Note that since I used the applescript to save the note, it only works on OSX. Also there is some tricks to keep track of the last saved date. Check the README in the repository for more informations.</p>

<p>The code is: <a href="https://github.com/yjpark/dayone2evernote">https://github.com/yjpark/dayone2evernote</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Initial Release of s3eBass - Marmalade extension for BASS audio engine]]></title>
    <link href="http://blog.yjpark.org/blog/2012/11/06/initial-release-of-s3ebass-marmalade-extension-for-bass-audio-engine/"/>
    <updated>2012-11-06T23:24:00+08:00</updated>
    <id>http://blog.yjpark.org/blog/2012/11/06/initial-release-of-s3ebass-marmalade-extension-for-bass-audio-engine</id>
    <content type="html"><![CDATA[<p>The audio and music are playing a very important role in games, for our future games, I want them to have good quality of audio and music, e.g. don&rsquo;t use short loop of mp3 music, but something much longer and more dynamic without taking much space. My first thought is to use MIDI+soundfonts or some mod-based music, so I spent some time to try to see the possibility.</p>

<p>There are quite some libraries to support xm playback, though I can&rsquo;t find any Marmalade extensions on the web, in the forum someone mentioned that they made use of FMOD in their game, though there is no code shared, and FMOD is quite expansive.</p>

<p>After some search, I decided to use <a href="http://www.un4seen.com/bass.html">BASS audio engine</a>, which is quite powerful, with well designed API, not bad documentation and sample, and a reasonable price for small projects (the shareware license can cover product with small price).</p>

<p>Now I&rsquo;ve got a working extension(though the only test I did was to play a xm file on OSX, iOS and Android), think other people maybe interesting in the extension or how to create similar extensions, so I&rsquo;m going to share the extension and some experiences I&rsquo;ve learn from the process(not in this post).</p>

<!-- more -->


<h2>Quick Note about Implementation</h2>

<p>BASS itself support many platform, the platforms I need are: OSX, iOS, Android. It&rsquo;s pure C, so it shouldn&rsquo;t be too hard to make it work with Marmalade. Though it took me quite a while to get some basic idea about the Marmalade extension system.</p>

<p>Most documentation from Marmalade about extensions seems focusing on writing platform specific codes in custom extension, in this case, it&rsquo;s actually much more easier since BASS is already platform independent, all we need is to make it work with Marmalade&rsquo;s build system.</p>

<p>Will write more about how to wrap C libraries into Marmalade extension in other posts later.</p>

<h2>Code of the Extension</h2>

<p>Since basically I have no idea about how to use BASS now, I just tried to use some codes from the BASS examples, it works pretty good, the xm files sounds quite good.</p>

<p>Think I will write some wrapper layer around the C function calls to expose audio functionalities to C++, XML and Lua codes. Guess I will have much better idea about it in a couple of months after our first game get done.</p>

<p>I&rsquo;ve put the codes at <a href="https://github.com/yjpark/s3eBass">Github</a>, feel free to clone it, and give it a try. see the github pages for more details about it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Convert Cocos2D Font (BMFont) to Marmalade's GxFont]]></title>
    <link href="http://blog.yjpark.org/blog/2012/11/05/convert-cocos2d-font-bmfont-to-marmalades-gxfont/"/>
    <updated>2012-11-05T19:16:00+08:00</updated>
    <id>http://blog.yjpark.org/blog/2012/11/05/convert-cocos2d-font-bmfont-to-marmalades-gxfont</id>
    <content type="html"><![CDATA[<p>In 2D games, it&rsquo;s typical to use image based font for UI elements, which can provide better graphic result, fast rendering, and usually smaller then true type fonts (especially if you want to support languages with big character set, e.g. Chinese).</p>

<p>There are quite some tools to generate such font images, I&rsquo;m using <a href="http://www.bmglyph.com/">bmGlyph</a> as the font generator, it can publish the popular &ldquo;Cocos2d / BMFont&rdquo; format, though it&rsquo;s not directly usable in Marmalade.</p>

<p>Marmalade is using its own font format, and provide a font generator in the SDK, though it only support plain color, and when I feed it with some Chinese characators, they are not included in the generated files. I&rsquo;m using the OS X version of the font builder, not sure about how the Windows version works.</p>

<p>My first thought was to add function to use the BMFont generated, though it&rsquo;s not an easy task, also I want to use IwGame&rsquo;s label components, which are based on Marmalade&rsquo;s GxFont and Truetype support.</p>

<p>After reading <a href="http://docs.madewithmarmalade.com/native/api_reference/iwgxfontapidocumentation/iwgxfontapioverview/iwgxfontfiles.html">GxFont Reference</a>, turns out it&rsquo;s using a fairly simple format, so I decided to write a converter to create gxfont files.</p>

<!-- more -->


<h2>Code of the Converter</h2>

<p>I&rsquo;ve put the codes at <a href="https://github.com/yjpark/marmalade-tools">Github</a>, feel free to clone it, and try to run it. see the github pages for more details about it.</p>

<p>The converter support UTF-8 characters with no problem, the size of the tga files is a bit big comparing to the Cocos2d version, since more empty spaces are needed for GxFont format.</p>

<p>It&rsquo;s kind of a straight-forward implementation, and probably there are ways to make it better, especially if the bmGlyph&rsquo;s console support is out (in the coming feature list now), the whole process of extracting characters from data file, create Cocos2d font, convert to GxFont can be fully automatied.</p>

<p>Just read the code if you&rsquo;re interested in the implementation details. :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PlantUML Plugin for Octopress]]></title>
    <link href="http://blog.yjpark.org/blog/2012/04/30/plantuml-plugin-for-octopress/"/>
    <updated>2012-04-30T23:20:00+08:00</updated>
    <id>http://blog.yjpark.org/blog/2012/04/30/plantuml-plugin-for-octopress</id>
    <content type="html"><![CDATA[<h2>What is PlantUML?</h2>

<p><a href="http://plantuml.sourceforge.net/">PlantUML</a> is a component that allows to quickly write:</p>

<ul>
<li>sequence diagram,</li>
<li>use case diagram,</li>
<li>class diagram,</li>
<li>activity diagram,</li>
<li>component diagram,</li>
<li>state diagram</li>
<li>object diagram</li>
</ul>


<p>I really like the idea of writing UML diagram with plain text. Since it&rsquo;s totally plaintext, it&rsquo;s very easy to do diff and version track, also you don&rsquo;t need to do anything about the layout (the text itself looks pretty good too).</p>

<p>Also the syntax of it is very well designed, and the generated diagrams looks really nice, so I use PlantUML for technical documentation with trac and sphinx.</p>

<h2>The Plugin</h2>

<p>After switching <a href="http://octopress.org/">Octopress</a> to my blog platform, I was looking for a way to integrate PlantUML within it, though I can&rsquo;t find one, so I wrote this very simple jekyll plugin (Octopress is based on <a href="http://jekyllrb.com/">Jekyll</a>).</p>

<p><a href="https://github.com/yjpark/jekyll-plantuml">jekyll-plantuml</a></p>

<!-- more -->


<h2>Configuration</h2>

<p>You need to download the plantuml.jar file from <a href="http://plantuml.sourceforge.net/download.html">http://plantuml.sourceforge.net/download.html</a></p>

<p>In your _config.xml, setup plantuml_jar to the downloaded jar file, e.g.</p>

<p><code>
plantuml_jar: ../_lib/plantuml.jar
plantuml_background_color: "#f8f8f8"
</code></p>

<p>The plantuml_background_color is optional, which will change the background of the generated diagram.</p>

<h2>Usage</h2>

<p>Just wrap the diagram text in &ldquo;plantuml&rdquo; block, e.g.</p>

<p>```

{% plantuml %}
Alice &ndash;> Bob: Authentication Request
Bob &mdash;> Alice: Authentication Response</p>

<p>Alice &ndash;> Bob: Another authentication Request
Alice &lt;&mdash; Bob: another authentication Response
{% endplantuml %}

```</p>

<h2>An Example</h2>

<p><center><img src='/images/plantuml/f6a3f2864ad1557c793a92f1c3de3951.png'></center></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Movable Write Open Sourced]]></title>
    <link href="http://blog.yjpark.org/blog/2012/04/22/movable-write-open-sourced/"/>
    <updated>2012-04-22T13:35:00+08:00</updated>
    <id>http://blog.yjpark.org/blog/2012/04/22/movable-write-open-sourced</id>
    <content type="html"><![CDATA[<h2>What is Movable Write</h2>

<p>Back in 2010, I already had some experiences on iOS development. Did wrote some very simple application to fetch information over HTTP-RPC to a trac instance, and wrote a very simple game with Cocos2D and Box2D. Did spend some time to catch up with the versions or iOS updates and read about the new APIs.</p>

<p>But my feeling was that by only spend small amount of time like it, I can never learn enough to have real experience on it, and I&rsquo;ve been working on Web development for a few years. So I decided to work part-time in the company, and use the other half time to develop a real application, by real I mean with proper quality and released at app-store.</p>

<p>I just got a iPad1 as development device, and tried a few apps, I liked note plus a lot, it&rsquo;s very powerful, but a bit too powerful for my need, I want to write words most of the time, and I want to write largely, but view the written lines small.</p>

<p>So I decided to write a note taking app for myself, after 3 months, Movable Write was released at app store.</p>

<ul>
<li><a href="http://itunes.apple.com/us/app/movable-write/id416413981?mt=8">App store link</a></li>
<li><a href="http://wolfewithane.com/blog/2011/6/22/review-hand-notes-over-to-movable-write.html">A nice introduction from wolfewithane.com</a></li>
<li><a href="http://iapp.com.tw/ex/topic_inside.php?id=2447">Another nice introduction from iapp.com.tw (in Chinese)</a></li>
</ul>


<!-- more -->


<h2>What is missed</h2>

<p>I did implement support for USB transfer for backup/restore, though didn&rsquo;t write document about this feature, the plan was to implement synchronization for it, Dropbox and/or iCloud, though didn&rsquo;t get time for it.</p>

<p>Another interesting possibility is Evernote integration, the code should be very easy to be runnable on OSX, also can be added as image or pdf.</p>

<p>A bigger change is adding bigger element into page, e.g. a photo then wrap the lines around it. I&rsquo;ve done some experiments about bigger writing area, it&rsquo;s not easy to put it into the current structure though.</p>

<p>Another bigger one is OCR for the written words, there are open-source libraries, though not sure how mature they are, all the original writing information are saved in file, it might be easy to add this feature.</p>

<p>A small one is to replay the writing process of the note, since all the timing infomation was saved too, this is not hard to implement.</p>

<p>&hellip;</p>

<h2>Why open sourced</h2>

<p>It&rsquo;s sadly that I can&rsquo;t put more dedicated time into it, since it didn&rsquo;t bring much money as a product for a small group of people, though I get quite some very good comments from some users.</p>

<p>I feel very happy that some people found it useful and use it frequently, so in case any of them are programmer, I decided to put all the source codes at github, please fork it if you&rsquo;re interesting.</p>

<ul>
<li><a href="https://github.com/pettyfun/MovableWrite">Movable Write at Github</a></li>
</ul>


<p>Might write more about the technical side of the project later, what I&rsquo;ve learned, and how to extend it.</p>
]]></content>
  </entry>
  
</feed>
