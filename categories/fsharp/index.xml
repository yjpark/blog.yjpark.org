<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fsharp on Living and Programming - YJ Park&#39;s Blog</title>
    <link>http://blog.yjpark.org/categories/fsharp/</link>
    <description>Recent content in Fsharp on Living and Programming - YJ Park&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>yjpark@gmail.com (YJ Park)</managingEditor>
    <webMaster>yjpark@gmail.com (YJ Park)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Sat, 01 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://blog.yjpark.org/categories/fsharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build DotNet Projects with Fake</title>
      <link>http://blog.yjpark.org/blog/2018/09/01/build-dotnet-projects-with-fake/</link>
      <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
      <author>yjpark@gmail.com (YJ Park)</author>
      <guid>http://blog.yjpark.org/blog/2018/09/01/build-dotnet-projects-with-fake/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been doing quite some F# coding lately, which is really nice, plan to write more about F# later, here I&amp;rsquo;m gonna talk about how to build DotNet projects with Fake.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve put common logic as libraries, then can share them easily across multiple projects, so I need to create NuGet packages. I&amp;rsquo;ve already created more than a dozen individual libraries, it&amp;rsquo;s clear that I need an automated process to manage them, or it&amp;rsquo;s very tedious to keep proper version of libraries in each project.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve did some small work around Fake to make such process, which works quite nicely for me, I plan to write two articles on this, this one will explain the basic structure, and how I use it to manage multiple projects easily, the next one will talk about how to create NuGet package, and how to use a hacky way to do local development easily.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Functional Reactive Actors in F#</title>
      <link>http://blog.yjpark.org/blog/2018/08/12/functional-reactive-actors-in-fsharp/</link>
      <pubDate>Sun, 12 Aug 2018 00:00:00 +0000</pubDate>
      <author>yjpark@gmail.com (YJ Park)</author>
      <guid>http://blog.yjpark.org/blog/2018/08/12/functional-reactive-actors-in-fsharp/</guid>
      <description>&lt;p&gt;In the last few months, I&amp;rsquo;ve created an actor frameworks in which each actors is in functional reactive way in F#.&lt;/p&gt;

&lt;p&gt;Basically each actor is created with the Elm Architecture, everything is strong typed, can be run on Dot Net Core, or in browser with javascript generated by Fable, also can be run on mobile or desktop devices with Xamarin or Dot Net.&lt;/p&gt;

&lt;p&gt;It costed me much time and efforts to get it to current state, learned a lot along the way, will try to write something before I forget the details.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>